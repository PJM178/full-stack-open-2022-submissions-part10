{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Formik } from \"formik\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FormikTextInput from \"./FormikTextInput\";\nimport { Button } from \"@react-native-material/core\";\nimport React, { useState } from \"react\";\nimport * as yup from 'yup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialValues = {\n  username: '',\n  password: ''\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    backgroundColor: 'white'\n  },\n  submit: {\n    padding: 5\n  },\n  fields: {\n    padding: 5\n  }\n});\nvar validationSchema = yup.object().shape({\n  username: yup.string().required('Username is required'),\n  password: yup.string().required('Password is required')\n});\nvar SignInForm = function SignInForm(_ref) {\n  var onSubmit = _ref.onSubmit,\n    showPassword = _ref.showPassword,\n    passwordVisibilityToggle = _ref.passwordVisibilityToggle;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FormikTextInput, {\n      name: \"username\",\n      placeholder: \"Username\",\n      style: styles.fields\n    }), _jsx(FormikTextInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      showPassword: showPassword,\n      style: styles.fields\n    }), _jsx(View, {\n      style: styles.submit,\n      children: _jsx(Button, {\n        title: \"Sign in\",\n        onPress: function onPress() {\n          onSubmit();\n          passwordVisibilityToggle();\n        },\n        style: styles.submit\n      })\n    })]\n  });\n};\nvar SignIn = function SignIn() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPassword = _useState2[0],\n    setShowPassword = _useState2[1];\n  var passwordVisibilityToggle = function passwordVisibilityToggle() {\n    setShowPassword(showPassword === true ? false : true);\n  };\n  var onSubmit = function onSubmit(values) {\n    var username = String(values.username);\n    var password = String(values.password);\n    if (username && password) {\n      console.log(values);\n    }\n  };\n  return _jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    children: function children(_ref2) {\n      var handleSubmit = _ref2.handleSubmit;\n      return _jsx(SignInForm, {\n        onSubmit: handleSubmit,\n        showPassword: showPassword,\n        passwordVisibilityToggle: passwordVisibilityToggle\n      });\n    }\n  });\n};\nexport default SignIn;","map":{"version":3,"names":["Formik","FormikTextInput","Button","React","useState","yup","initialValues","username","password","styles","StyleSheet","create","container","padding","backgroundColor","submit","fields","validationSchema","object","shape","string","required","SignInForm","onSubmit","showPassword","passwordVisibilityToggle","SignIn","setShowPassword","values","String","console","log","handleSubmit"],"sources":["D:/Ohjelmointi/Full Stack Open/Exercises/Part 10/rate-repository-app/src/components/SignIn.jsx"],"sourcesContent":["import { Formik } from \"formik\";\nimport { Pressable, Text, View, StyleSheet, Platform } from \"react-native\";\nimport FormikTextInput from \"./FormikTextInput\";\nimport { Button } from \"@react-native-material/core\";\nimport React, { useState } from \"react\";\nimport * as yup from 'yup';\n\nconst initialValues = {\n  username: '',\n  password: '',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    backgroundColor: 'white',\n  },\n  submit: {\n    padding: 5,\n  },\n  fields: {\n    padding: 5,\n  },\n});\n\nconst validationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .required('Username is required'),\n  password: yup\n    .string()\n    .required('Password is required'),\n});\n\nconst SignInForm = ({ onSubmit, showPassword, passwordVisibilityToggle }) => {\n  return(\n    <View style={styles.container}>\n      <FormikTextInput name=\"username\" placeholder=\"Username\" style={styles.fields} />\n      <FormikTextInput name=\"password\" placeholder=\"Password\" showPassword={showPassword} style={styles.fields} />\n      <View style={styles.submit}><Button title=\"Sign in\" onPress={() => {onSubmit(); passwordVisibilityToggle()}} style={styles.submit} /></View>\n    </View>\n  )\n}\n\nconst SignIn = () => {\n  const [showPassword, setShowPassword] = useState(true);\n\n  const passwordVisibilityToggle = () => {\n    setShowPassword(showPassword === true ? false : true);\n  };\n\n  const onSubmit = values => {\n    const username = String(values.username);\n    const password = String(values.password);\n\n    if (username && password) {\n      console.log(values);\n    }\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n      {({ handleSubmit }) => <SignInForm onSubmit={handleSubmit} showPassword={showPassword} passwordVisibilityToggle={passwordVisibilityToggle} />}\n    </Formik>\n  );\n};\n\nexport default SignIn;"],"mappings":";AAAA,SAASA,MAAM,QAAQ,QAAQ;AAAC;AAAA;AAAA;AAAA;AAAA;AAEhC,OAAOC,eAAe;AACtB,SAASC,MAAM,QAAQ,6BAA6B;AACpD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAAA;AAE3B,IAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,OAAO,EAAE,CAAC;IACVC,eAAe,EAAE;EACnB,CAAC;EACDC,MAAM,EAAE;IACNF,OAAO,EAAE;EACX,CAAC;EACDG,MAAM,EAAE;IACNH,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,IAAMI,gBAAgB,GAAGZ,GAAG,CAACa,MAAM,EAAE,CAACC,KAAK,CAAC;EAC1CZ,QAAQ,EAAEF,GAAG,CACVe,MAAM,EAAE,CACRC,QAAQ,CAAC,sBAAsB,CAAC;EACnCb,QAAQ,EAAEH,GAAG,CACVe,MAAM,EAAE,CACRC,QAAQ,CAAC,sBAAsB;AACpC,CAAC,CAAC;AAEF,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAA6D;EAAA,IAAvDC,QAAQ,QAARA,QAAQ;IAAEC,YAAY,QAAZA,YAAY;IAAEC,wBAAwB,QAAxBA,wBAAwB;EACpE,OACE,MAAC,IAAI;IAAC,KAAK,EAAEhB,MAAM,CAACG,SAAU;IAAA,WAC5B,KAAC,eAAe;MAAC,IAAI,EAAC,UAAU;MAAC,WAAW,EAAC,UAAU;MAAC,KAAK,EAAEH,MAAM,CAACO;IAAO,EAAG,EAChF,KAAC,eAAe;MAAC,IAAI,EAAC,UAAU;MAAC,WAAW,EAAC,UAAU;MAAC,YAAY,EAAEQ,YAAa;MAAC,KAAK,EAAEf,MAAM,CAACO;IAAO,EAAG,EAC5G,KAAC,IAAI;MAAC,KAAK,EAAEP,MAAM,CAACM,MAAO;MAAA,UAAC,KAAC,MAAM;QAAC,KAAK,EAAC,SAAS;QAAC,OAAO,EAAE,mBAAM;UAACQ,QAAQ,EAAE;UAAEE,wBAAwB,EAAE;QAAA,CAAE;QAAC,KAAK,EAAEhB,MAAM,CAACM;MAAO;IAAG,EAAO;EAAA,EACvI;AAEX,CAAC;AAED,IAAMW,MAAM,GAAG,SAATA,MAAM,GAAS;EACnB,gBAAwCtB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/CoB,YAAY;IAAEG,eAAe;EAEpC,IAAMF,wBAAwB,GAAG,SAA3BA,wBAAwB,GAAS;IACrCE,eAAe,CAACH,YAAY,KAAK,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC;EACvD,CAAC;EAED,IAAMD,QAAQ,GAAG,SAAXA,QAAQ,CAAGK,MAAM,EAAI;IACzB,IAAMrB,QAAQ,GAAGsB,MAAM,CAACD,MAAM,CAACrB,QAAQ,CAAC;IACxC,IAAMC,QAAQ,GAAGqB,MAAM,CAACD,MAAM,CAACpB,QAAQ,CAAC;IAExC,IAAID,QAAQ,IAAIC,QAAQ,EAAE;MACxBsB,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACrB;EACF,CAAC;EAED,OACE,KAAC,MAAM;IAAC,aAAa,EAAEtB,aAAc;IAAC,QAAQ,EAAEiB,QAAS;IAAC,gBAAgB,EAAEN,gBAAiB;IAAA,UAC1F;MAAA,IAAGe,YAAY,SAAZA,YAAY;MAAA,OAAO,KAAC,UAAU;QAAC,QAAQ,EAAEA,YAAa;QAAC,YAAY,EAAER,YAAa;QAAC,wBAAwB,EAAEC;MAAyB,EAAG;IAAA;EAAA,EACtI;AAEb,CAAC;AAED,eAAeC,MAAM"},"metadata":{},"sourceType":"module"}