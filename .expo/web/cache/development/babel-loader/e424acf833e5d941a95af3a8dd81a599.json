{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigate, useParams } from 'react-router-native';\nimport useRepository from \"../hooks/useRepository\";\nimport Constants from 'expo-constants';\nimport { Button } from \"@react-native-material/core\";\nimport theme from \"../theme\";\nimport RepositoryItemDescription from \"./RepositoryItemDescription\";\nimport RepositoryItemAvatar from \"./RepositoryItemAvatar\";\nimport RepositoryItemStats from \"./RepositoryItemStats\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    padding: Constants.statusBarHeight / 4,\n    backgroundColor: 'white'\n  },\n  item: {\n    flexDirection: 'row',\n    color: 'green'\n  },\n  descriptionComponent: {\n    container: {\n      marginLeft: Constants.statusBarHeight / 4,\n      flexShrink: 1\n    },\n    name: {\n      fontWeight: theme.repositoryItem.fontWeights.bold\n    },\n    language: {\n      container: {\n        backgroundColor: '#0366d6',\n        borderRadius: 5\n      },\n      item: {\n        padding: Constants.statusBarHeight / 8,\n        color: 'white'\n      }\n    }\n  },\n  statsComponent: {\n    container: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    },\n    itemAmount: {\n      fontWeight: theme.repositoryItem.fontWeights.bold\n    },\n    item: {\n      alignItems: 'center'\n    }\n  },\n  button: {\n    padding: 5\n  }\n});\nvar RepositoryItem = function RepositoryItem(_ref) {\n  var item = _ref.item;\n  var _useParams = useParams(),\n    repositoryId = _useParams.repositoryId;\n  var navigate = useNavigate();\n  var handlePress = function handlePress() {\n    if (item !== undefined) {\n      navigate(\"/\" + item.id);\n    }\n  };\n  if (item === undefined) {\n    var _useRepository = useRepository(repositoryId),\n      repository = _useRepository.repository,\n      error = _useRepository.error,\n      loading = _useRepository.loading;\n    if (repository) {\n      var _item = repository;\n      return _jsx(View, {\n        testID: \"repositoryItem\",\n        style: styles.container,\n        children: _jsxs(Pressable, {\n          onPress: handlePress,\n          children: [_jsxs(View, {\n            style: styles.item,\n            children: [_jsx(RepositoryItemAvatar, {\n              image: _item.ownerAvatarUrl\n            }), _jsx(RepositoryItemDescription, {\n              name: _item.fullName,\n              description: _item.description,\n              styles: styles.descriptionComponent,\n              language: _item.language\n            })]\n          }), _jsx(RepositoryItemStats, {\n            stars: _item.stargazersCount,\n            forks: _item.forksCount,\n            reviews: _item.reviewCount,\n            rating: _item.ratingAverage,\n            style: styles\n          }), _jsx(View, {\n            style: styles.button,\n            children: _jsx(Button, {\n              title: \"Open in GitHub\",\n              onPress: function onPress() {\n                return console.log('jorma');\n              }\n            })\n          })]\n        })\n      }, _item.id);\n    }\n  } else {\n    return _jsx(View, {\n      testID: \"repositoryItem\",\n      style: styles.container,\n      children: _jsxs(Pressable, {\n        onPress: handlePress,\n        children: [_jsxs(View, {\n          style: styles.item,\n          children: [_jsx(RepositoryItemAvatar, {\n            image: item.ownerAvatarUrl\n          }), _jsx(RepositoryItemDescription, {\n            name: item.fullName,\n            description: item.description,\n            styles: styles.descriptionComponent,\n            language: item.language\n          })]\n        }), _jsx(RepositoryItemStats, {\n          stars: item.stargazersCount,\n          forks: item.forksCount,\n          reviews: item.reviewCount,\n          rating: item.ratingAverage,\n          style: styles\n        })]\n      })\n    }, item.id);\n  }\n};\nexport default RepositoryItem;","map":{"version":3,"names":["useNavigate","useParams","useRepository","Constants","Button","theme","RepositoryItemDescription","RepositoryItemAvatar","RepositoryItemStats","styles","StyleSheet","create","container","padding","statusBarHeight","backgroundColor","item","flexDirection","color","descriptionComponent","marginLeft","flexShrink","name","fontWeight","repositoryItem","fontWeights","bold","language","borderRadius","statsComponent","justifyContent","itemAmount","alignItems","button","RepositoryItem","repositoryId","navigate","handlePress","undefined","id","repository","error","loading","ownerAvatarUrl","fullName","description","stargazersCount","forksCount","reviewCount","ratingAverage","console","log"],"sources":["D:/Ohjelmointi/Full Stack Open/Exercises/Part 10/rate-repository-app/src/components/RepositoryItem.jsx"],"sourcesContent":["import { View, Text, StyleSheet, Pressable } from 'react-native';\nimport { useNavigate, useParams } from 'react-router-native';\nimport useRepository from '../hooks/useRepository';\nimport Constants from 'expo-constants';\nimport { Button } from \"@react-native-material/core\";\n\nimport theme from '../theme';\n\nimport RepositoryItemDescription from './RepositoryItemDescription';\nimport RepositoryItemAvatar from './RepositoryItemAvatar';\nimport RepositoryItemStats from './RepositoryItemStats';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: Constants.statusBarHeight/4,\n    backgroundColor: 'white',\n  },\n  item: {\n    flexDirection: 'row',\n    color: 'green',\n  },\n  descriptionComponent: {\n    container: {\n      marginLeft: Constants.statusBarHeight/4,\n      flexShrink: 1,\n    },\n    name: {\n      fontWeight: theme.repositoryItem.fontWeights.bold,\n    },\n    language: {\n      container:{\n        backgroundColor: '#0366d6',\n        borderRadius: 5,\n      },\n      item: {\n        padding: Constants.statusBarHeight/8,\n        color: 'white',\n      },\n    },\n  },\n  statsComponent: {\n    container: {\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n    },\n    itemAmount: {\n      fontWeight: theme.repositoryItem.fontWeights.bold,\n    },\n    item: {\n      alignItems: 'center',\n    },\n  },\n  button: {\n    padding: 5,\n  }\n});\n\n\nconst RepositoryItem = ({ item }) => {\n  const { repositoryId } = useParams();\n  const navigate = useNavigate();\n\n  const handlePress = () => {\n    if (item !== undefined) {\n      navigate(`/${item.id}`)\n    }\n  };\n\n  if (item === undefined) {\n    const { repository, error, loading } = useRepository(repositoryId);\n    if (repository) {\n      const item = repository\n      return (\n        <View testID=\"repositoryItem\" key={item.id} style={styles.container}>\n          <Pressable onPress={handlePress}>\n          <View style={styles.item}>\n            <RepositoryItemAvatar image={item.ownerAvatarUrl} />\n            <RepositoryItemDescription name={item.fullName} description={item.description} \n              styles={styles.descriptionComponent} language={item.language} />\n          </View>\n          <RepositoryItemStats stars={item.stargazersCount} forks={item.forksCount} \n            reviews={item.reviewCount} rating={item.ratingAverage} style={styles} />\n           <View style={styles.button}>\n            <Button title=\"Open in GitHub\" onPress={() => console.log('jorma')}/>\n          </View>\n          </Pressable>\n         \n        </View>\n      );\n    }\n  } else {\n    return (\n      <View testID=\"repositoryItem\" key={item.id} style={styles.container}>\n        <Pressable onPress={handlePress}>\n        <View style={styles.item}>\n          <RepositoryItemAvatar image={item.ownerAvatarUrl} />\n          <RepositoryItemDescription name={item.fullName} description={item.description} \n            styles={styles.descriptionComponent} language={item.language} />\n        </View>\n        <RepositoryItemStats stars={item.stargazersCount} forks={item.forksCount} \n          reviews={item.reviewCount} rating={item.ratingAverage} style={styles} />\n        </Pressable>\n      </View>\n    );\n  }\n};\n\nexport default RepositoryItem;"],"mappings":"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"},"metadata":{},"sourceType":"module"}