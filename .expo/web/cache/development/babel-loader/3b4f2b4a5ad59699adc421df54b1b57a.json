{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport Constants from 'expo-constants';\nimport { setContext } from '@apollo/client/link/context';\nvar apolloUri = Constants.manifest.extra.apolloUri;\nvar httpLink = createHttpLink({\n  uri: apolloUri\n});\nvar createApolloClient = function createApolloClient(authStorage) {\n  var authLink = setContext(function () {\n    var _ref2 = _asyncToGenerator(function* (_, _ref) {\n      var headers = _ref.headers;\n      try {\n        var accessToken = yield authStorage.getAccessToken();\n        return {\n          headers: _objectSpread(_objectSpread({}, headers), {}, {\n            authorization: accessToken ? \"Bearer \" + accessToken : ''\n          })\n        };\n      } catch (e) {\n        console.log(e);\n        return {\n          headers: headers\n        };\n      }\n    });\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n  return new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n  });\n};\nexport default createApolloClient;","map":{"version":3,"names":["ApolloClient","InMemoryCache","createHttpLink","Constants","setContext","apolloUri","manifest","extra","httpLink","uri","createApolloClient","authStorage","authLink","_","headers","accessToken","getAccessToken","authorization","e","console","log","link","concat","cache"],"sources":["D:/Ohjelmointi/Full Stack Open/Exercises/Part 10/rate-repository-app/src/utils/apolloClient.js"],"sourcesContent":["import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport Constants from 'expo-constants';\nimport { setContext } from '@apollo/client/link/context'\n\nconst apolloUri = Constants.manifest.extra.apolloUri;\n\nconst httpLink = createHttpLink({\n  // Replace the IP address part with your own IP address!\n  uri: apolloUri,\n});\n\nconst createApolloClient = (authStorage) => {\n  const authLink = setContext(async (_, { headers }) => {\n    try {\n      const accessToken = await authStorage.getAccessToken();\n      return {\n        headers: {\n          ...headers,\n          authorization: accessToken ? `Bearer ${accessToken}` : '',\n        },\n      };\n    } catch (e) {\n      console.log(e);\n      return {\n        headers,\n      };\n    }\n  });\n\n  return new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n};\n\nexport default createApolloClient;"],"mappings":";;;;AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAQ,gBAAgB;AAC5E,OAAOC,SAAS,MAAM,gBAAgB;AACtC,SAASC,UAAU,QAAQ,6BAA6B;AAExD,IAAMC,SAAS,GAAGF,SAAS,CAACG,QAAQ,CAACC,KAAK,CAACF,SAAS;AAEpD,IAAMG,QAAQ,GAAGN,cAAc,CAAC;EAE9BO,GAAG,EAAEJ;AACP,CAAC,CAAC;AAEF,IAAMK,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,WAAW,EAAK;EAC1C,IAAMC,QAAQ,GAAGR,UAAU;IAAA,8BAAC,WAAOS,CAAC,QAAkB;MAAA,IAAdC,OAAO,QAAPA,OAAO;MAC7C,IAAI;QACF,IAAMC,WAAW,SAASJ,WAAW,CAACK,cAAc,EAAE;QACtD,OAAO;UACLF,OAAO,kCACFA,OAAO;YACVG,aAAa,EAAEF,WAAW,eAAaA,WAAW,GAAK;UAAE;QAE7D,CAAC;MACH,CAAC,CAAC,OAAOG,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;QACd,OAAO;UACLJ,OAAO,EAAPA;QACF,CAAC;MACH;IACF,CAAC;IAAA;MAAA;IAAA;EAAA,IAAC;EAEF,OAAO,IAAId,YAAY,CAAC;IACtBqB,IAAI,EAAET,QAAQ,CAACU,MAAM,CAACd,QAAQ,CAAC;IAC/Be,KAAK,EAAE,IAAItB,aAAa;EAC1B,CAAC,CAAC;AACJ,CAAC;AAED,eAAeS,kBAAkB"},"metadata":{},"sourceType":"module"}