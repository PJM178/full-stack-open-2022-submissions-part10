{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RepositoryItem from \"./RepositoryItem\";\nimport useRepositories from \"../hooks/useRepositories\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  }\n});\nvar activityIndicator = StyleSheet.create({\n  flex: 1 / 2,\n  justifyContent: 'center'\n});\nvar ItemSeparator = function ItemSeparator() {\n  return _jsx(View, {\n    style: styles.separator\n  });\n};\nexport var RepositoryListContainer = function RepositoryListContainer(_ref) {\n  var repositories = _ref.repositories,\n    error = _ref.error,\n    loading = _ref.loading;\n  var repositoryNodes = repositories ? repositories.edges.map(function (edge) {\n    return edge.node;\n  }) : [];\n  console.log(repositories.node);\n  if (error) {\n    return _jsx(Text, {\n      children: \"Error! \" + error\n    });\n  }\n  ;\n  if (!repositories) {\n    return _jsx(View, {\n      style: activityIndicator,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0000ff\"\n      })\n    });\n  }\n  return _jsx(FlatList, {\n    data: repositoryNodes,\n    ItemSeparatorComponent: ItemSeparator,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _jsx(RepositoryItem, {\n        item: item\n      });\n    }\n  });\n};\nvar RepositoryList = function RepositoryList() {\n  var _useRepositories = useRepositories(),\n    repositories = _useRepositories.repositories,\n    error = _useRepositories.error,\n    loading = _useRepositories.loading;\n  return _jsx(RepositoryListContainer, {\n    repositories: repositories,\n    error: error,\n    loading: loading\n  });\n};\nexport default RepositoryList;","map":{"version":3,"names":["useState","useEffect","RepositoryItem","useRepositories","styles","StyleSheet","create","separator","height","activityIndicator","flex","justifyContent","ItemSeparator","RepositoryListContainer","repositories","error","loading","repositoryNodes","edges","map","edge","node","console","log","item","RepositoryList"],"sources":["D:/Ohjelmointi/Full Stack Open/Exercises/Part 10/rate-repository-app/src/components/RepositoryList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ActivityIndicator, FlatList, View, StyleSheet, Text } from 'react-native';\n\nimport RepositoryItem from './RepositoryItem';\nimport useRepositories from '../hooks/useRepositories';\n\nconst styles = StyleSheet.create({\n  separator: {\n    height: 10,\n  },\n});\n\nconst activityIndicator = StyleSheet.create({\n  flex: 1/2,\n  justifyContent: 'center',\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nexport const RepositoryListContainer = ({ repositories, error, loading }) => {\n  // Get the nodes from the edges array - \"repositories\" is \n  //  not defined before this is called hence the ternary\n  const repositoryNodes = repositories\n  ? repositories.edges.map(edge => edge.node)\n  : [];\n\n  console.log(repositories.node);\n\n  if (error) {\n    return (\n      <Text>{`Error! ${error}`}</Text>\n    );\n  };\n\n  if (!repositories) {\n    return (\n      <View style={activityIndicator}>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    )\n  }\n  return (\n    <FlatList\n      data={repositoryNodes}\n      ItemSeparatorComponent={ItemSeparator}\n      renderItem={({item}) => (\n        <RepositoryItem item={item} />\n      )}\n    />\n  );\n};\n\nconst RepositoryList = () => {\n  const { repositories, error, loading } = useRepositories();\n\n\n  return <RepositoryListContainer repositories={repositories} error={error} loading={loading} />;\n};\n\nexport default RepositoryList;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAG5C,OAAOC,cAAc;AACrB,OAAOC,eAAe;AAAiC;AAEvD,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,IAAMC,iBAAiB,GAAGJ,UAAU,CAACC,MAAM,CAAC;EAC1CI,IAAI,EAAE,CAAC,GAAC,CAAC;EACTC,cAAc,EAAE;AAClB,CAAC,CAAC;AAEF,IAAMC,aAAa,GAAG,SAAhBA,aAAa;EAAA,OAAS,KAAC,IAAI;IAAC,KAAK,EAAER,MAAM,CAACG;EAAU,EAAG;AAAA;AAE7D,OAAO,IAAMM,uBAAuB,GAAG,SAA1BA,uBAAuB,OAAyC;EAAA,IAAnCC,YAAY,QAAZA,YAAY;IAAEC,KAAK,QAALA,KAAK;IAAEC,OAAO,QAAPA,OAAO;EAGpE,IAAMC,eAAe,GAAGH,YAAY,GAClCA,YAAY,CAACI,KAAK,CAACC,GAAG,CAAC,UAAAC,IAAI;IAAA,OAAIA,IAAI,CAACC,IAAI;EAAA,EAAC,GACzC,EAAE;EAEJC,OAAO,CAACC,GAAG,CAACT,YAAY,CAACO,IAAI,CAAC;EAE9B,IAAIN,KAAK,EAAE;IACT,OACE,KAAC,IAAI;MAAA,sBAAYA;IAAK,EAAU;EAEpC;EAAC;EAED,IAAI,CAACD,YAAY,EAAE;IACjB,OACE,KAAC,IAAI;MAAC,KAAK,EAAEL,iBAAkB;MAAA,UAC7B,KAAC,iBAAiB;QAAC,IAAI,EAAC,OAAO;QAAC,KAAK,EAAC;MAAS;IAAG,EAC7C;EAEX;EACA,OACE,KAAC,QAAQ;IACP,IAAI,EAAEQ,eAAgB;IACtB,sBAAsB,EAAEL,aAAc;IACtC,UAAU,EAAE;MAAA,IAAEY,IAAI,SAAJA,IAAI;MAAA,OAChB,KAAC,cAAc;QAAC,IAAI,EAAEA;MAAK,EAAG;IAAA;EAC9B,EACF;AAEN,CAAC;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,uBAAyCtB,eAAe,EAAE;IAAlDW,YAAY,oBAAZA,YAAY;IAAEC,KAAK,oBAALA,KAAK;IAAEC,OAAO,oBAAPA,OAAO;EAGpC,OAAO,KAAC,uBAAuB;IAAC,YAAY,EAAEF,YAAa;IAAC,KAAK,EAAEC,KAAM;IAAC,OAAO,EAAEC;EAAQ,EAAG;AAChG,CAAC;AAED,eAAeS,cAAc"},"metadata":{},"sourceType":"module"}