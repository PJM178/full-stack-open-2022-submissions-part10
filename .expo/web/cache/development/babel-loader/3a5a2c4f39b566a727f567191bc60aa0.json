{"ast":null,"code":"import { useQuery } from '@apollo/client';\nimport { GET_REPOSITORY } from \"../graphql/queries\";\nvar useRepository = function useRepository(repositoryId) {\n  var _useQuery = useQuery(GET_REPOSITORY, {\n      variables: {\n        repositoryId: repositoryId\n      }\n    }),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  if (loading) return {\n    loading: loading\n  };\n  if (error) return {\n    error: error\n  };\n  var repository = data.repository;\n  return {\n    repository: repository\n  };\n};\nexport default useRepository;","map":{"version":3,"names":["useQuery","GET_REPOSITORY","useRepository","repositoryId","variables","loading","error","data","repository"],"sources":["D:/Ohjelmointi/Full Stack Open/Exercises/Part 10/rate-repository-app/src/hooks/useRepository.js"],"sourcesContent":["import { useQuery } from '@apollo/client';\nimport { GET_REPOSITORY } from '../graphql/queries';\n\nconst useRepository = (repositoryId) => {\n  const { loading, error, data } = useQuery(GET_REPOSITORY, {\n    variables: { repositoryId: repositoryId },\n  });\n\n  if (loading) return { loading };\n  if (error) return { error };\n\n  const repository = data.repository;\n\n  return { repository };\n};\n\nexport default useRepository;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc;AAEvB,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,YAAY,EAAK;EACtC,gBAAiCH,QAAQ,CAACC,cAAc,EAAE;MACxDG,SAAS,EAAE;QAAED,YAAY,EAAEA;MAAa;IAC1C,CAAC,CAAC;IAFME,OAAO,aAAPA,OAAO;IAAEC,KAAK,aAALA,KAAK;IAAEC,IAAI,aAAJA,IAAI;EAI5B,IAAIF,OAAO,EAAE,OAAO;IAAEA,OAAO,EAAPA;EAAQ,CAAC;EAC/B,IAAIC,KAAK,EAAE,OAAO;IAAEA,KAAK,EAALA;EAAM,CAAC;EAE3B,IAAME,UAAU,GAAGD,IAAI,CAACC,UAAU;EAElC,OAAO;IAAEA,UAAU,EAAVA;EAAW,CAAC;AACvB,CAAC;AAED,eAAeN,aAAa"},"metadata":{},"sourceType":"module"}